<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ThinkPHP5框架where条件中含有or的使用方法</title>
      <link href="/archives/435769.html"/>
      <url>/archives/435769.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-直接whereOr"><a href="#1-直接whereOr" class="headerlink" title="1. 直接whereOr"></a>1. 直接whereOr</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$list</span> <span class="token operator">=</span> <span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'tb'</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'status'</span><span class="token operator">=&gt;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'admin_id'</span><span class="token operator">=&gt;</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">whereOr</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token operator">=&gt;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'step'</span><span class="token operator">=&gt;</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 生成的sql为：select * from `tb` where `status`=1 and `admin_id`=5 or (`type`=1 or `step`=2);</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-采用闭包的方式"><a href="#2-采用闭包的方式" class="headerlink" title="2. 采用闭包的方式"></a>2. 采用闭包的方式</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$map</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'status'</span><span class="token operator">=&gt;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'admin_id'</span><span class="token operator">=&gt;</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$orMap</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token operator">=&gt;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'step'</span><span class="token operator">=&gt;</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$list</span> <span class="token operator">=</span> <span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'tb'</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">whereOr</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$orMap</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token variable">$orMap</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'id desc'</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 生成的sql为：select * from `tb` where (`status`=1 and `admin_id`=5) or (`type`=1 and `step`=2);</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一般来说，在复杂的查询里，我们更多的是使用第二种方式。</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> ThinkPHP </tag>
            
            <tag> 数据库查询 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP中数组内容依次赋值给变量</title>
      <link href="/archives/43827.html"/>
      <url>/archives/43827.html</url>
      
        <content type="html"><![CDATA[<p>在日常开发过程中，经常需要把数组中的内容依次赋值给变量，可以使用list、[]、extract来处理。</p><h3 id="1-list-var1-var2…-x3D-arr"><a href="#1-list-var1-var2…-x3D-arr" class="headerlink" title="1. list($var1,$var2…) = $arr;"></a>1. list($var1,$var2…) = $arr;</h3><p>   或者[$var1,$var2…] = $arr;<br>   将数组中的值赋给一些变量<br>   该函数只能用于索引数组，且数字索引从0开始。<br>   如果对应的数字下标，则该变量赋值为null</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'Jone'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'Jam'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'Kav'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//output：string(4) "Jone" string(3) "Jam" string(3) "Kav"</span><span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'Jone'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'Jam'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'Kav'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//output：string(4) "Jone" string(3) "Jam"</span><span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'Jone'</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'Jam'</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'Kav'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//output：NULL NULL string(4) "Jone"</span><span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span> <span class="token operator">=&gt;</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'Jam'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'name'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'Kav'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//output：NULL NULL string(3) "Jam"</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-extract-array-extract-rules-prefix"><a href="#2-extract-array-extract-rules-prefix" class="headerlink" title="2. extract(array,extract_rules,prefix);"></a>2. extract(array,extract_rules,prefix);</h3><p>   从数组中将变量导入到当前的符号表<br>   该函数使用数组键名作为变量名，使用数组键值作为变量值，进行依次赋值</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">extract</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span> <span class="token operator">=&gt;</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'name'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'Hoj'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/** * 在IDE中会提示错误，加上注释即可 * @var $id * @var $name */</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//output：int(3) string(3) "Hoj"</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'name'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'Hoj'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//output：string(3) "Hoj"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总结：一般索引数组用list，关联数组用extract。</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下快速拆分txt文件</title>
      <link href="/archives/53g$Y3441.html"/>
      <url>/archives/53g$Y3441.html</url>
      
        <content type="html"><![CDATA[<p>有时候，需要把一个大的txt文件拆分为多个小文件，并行处理文件里的内容，来提高工作效率。下面介绍一下在windows下的拆分方法。</p><p>现在有个a.txt文件，里面有若干行内容，现要拆分为多个小文件<br><img src="/images/split_txt_1.png"></p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="1、在文件所在目录打开git-bash；"><a href="#1、在文件所在目录打开git-bash；" class="headerlink" title="1、在文件所在目录打开git bash；"></a>1、在文件所在目录打开git bash；</h3><h3 id="2、创建一个文件夹"><a href="#2、创建一个文件夹" class="headerlink" title="2、创建一个文件夹"></a>2、创建一个文件夹</h3><p><img src="/images/split_txt_2.png"></p><h3 id="3、执行命令"><a href="#3、执行命令" class="headerlink" title="3、执行命令"></a>3、执行命令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">split</span> -l <span class="token number">5</span> -d -a <span class="token number">1</span> a.txt tmp/m_ <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> tmp/ <span class="token operator">&amp;&amp;</span> <span class="token function">ls</span><span class="token operator">|</span><span class="token function">grep</span> m_<span class="token operator">|</span><span class="token function">xargs</span> -n1 -i<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token function">mv</span>  <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>命令分解：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-l <span class="token number">5</span> ：按行分割，每个文件5行-d ：添加数字后缀，如00,01-a <span class="token number">1</span> <span class="token builtin class-name">:</span> 用一位数据来顺序命名<span class="token punctuation">(</span>从0开始<span class="token punctuation">)</span>tmp/ ：拆分后的文件放在tmp目录下m_ ：拆分后的文件名前缀<span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> tmp/ <span class="token operator">&amp;&amp;</span> <span class="token function">ls</span><span class="token operator">|</span><span class="token function">grep</span> m_<span class="token operator">|</span><span class="token function">xargs</span> -n1 -i<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token function">mv</span>  <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>.txt ：进入tmp目录，对拆分后的文件添加扩展名txt<span class="token punctuation">(</span>默认生成的文件是没有扩展名的<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4、在tmp目录下就看到生成的文件了"><a href="#4、在tmp目录下就看到生成的文件了" class="headerlink" title="4、在tmp目录下就看到生成的文件了"></a>4、在tmp目录下就看到生成的文件了</h3><p><img src="/images/split_txt_3.png"></p><p>注：对xlsx文件拆分有问题</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 文件拆分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP中不太常用的函数</title>
      <link href="/archives/128Te3.html"/>
      <url>/archives/128Te3.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-constant"><a href="#1-constant" class="headerlink" title="1. constant()"></a>1. constant()</h3><p>   返回常量的值</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">define<span class="token punctuation">(</span><span class="token string">'DEV'</span>,<span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var_dump<span class="token punctuation">(</span>constant<span class="token punctuation">(</span><span class="token string">'DEV'</span><span class="token punctuation">))</span><span class="token punctuation">;</span>       //string<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"test"</span>     等同于var_dump<span class="token punctuation">(</span>DEV<span class="token punctuation">)</span><span class="token punctuation">;</span>var_dump<span class="token punctuation">(</span>constant<span class="token punctuation">(</span><span class="token string">'SORT_ASC'</span><span class="token punctuation">))</span><span class="token punctuation">;</span>  //int<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>    等同于var_dump<span class="token punctuation">(</span>SORT_ASC<span class="token punctuation">)</span><span class="token punctuation">;</span>var_dump<span class="token punctuation">(</span>constant<span class="token punctuation">(</span>SORT_ASC<span class="token punctuation">))</span><span class="token punctuation">;</span>    //NULLvar_dump<span class="token punctuation">(</span>TEST<span class="token punctuation">)</span><span class="token punctuation">;</span>                  //string<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"TEST"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>   个人感觉作用不大，还不如直接使用常量呢，最多也就是判断常量是否被定义。</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 函数 </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP5 中order的使用</title>
      <link href="/archives/9a9f5736.html"/>
      <url>/archives/9a9f5736.html</url>
      
        <content type="html"><![CDATA[<p>之前一直在使用Yii2，在查询排序时习惯了使用 SORT_DESC | SORT_ASC，今天在使用的时候发现了问题，记录一下。<br>下面这个查询没有得到预期的结果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"> <span class="token variable">$list</span> <span class="token operator">=</span> Db::name<span class="token punctuation">(</span><span class="token string">'tb'</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>where<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'status'</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>order<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'create_time'</span><span class="token operator">=</span><span class="token operator">&gt;</span>SORT_DESC<span class="token punctuation">]</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>field<span class="token punctuation">(</span><span class="token string">'id,name'</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>select<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>// 输出sql为：select id,name from tb where <span class="token assign-left variable">status</span><span class="token operator">=</span><span class="token number">1</span> order by create_time<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>问题在于SORT_DESC=3、SORT_ASC=4，这不符合thinkphp中order方法的传参规则，<br>可以这样使用：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">order<span class="token punctuation">(</span><span class="token string">'id'</span>,<span class="token string">'desc'</span><span class="token punctuation">)</span>order<span class="token punctuation">(</span><span class="token string">'id desc'</span><span class="token punctuation">)</span>order<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token string">'desc'</span>,<span class="token string">'create_time'</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token string">'asc'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>order<span class="token punctuation">(</span><span class="token string">'id,create_time desc'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码规范建议</title>
      <link href="/archives/1294.html"/>
      <url>/archives/1294.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="687d7732b072300d2fad16672752cadd73e0c4414806b6a742b4c71bc352c9a9">c68a602c5e72318657678748a5a1bb7b3d5f7dd93504a34bcf327dd7971890a03fe70e2fa262f1599fc3ae6923680bae41970d1e5f41160b56ffd50026a0f23f77b17efaf04c41e7b55cc8f651c64ad21f16b7444aafe7b60b98583190a3d9c098d75bbffb3f4b080e9caeeb0ec20fd4261acb2c8f824d9007e312003b82e50968e7d31654a32894933be01cdf7127767f16d8c8b3b3f895377de4fb015de5d0b8bc135baa5f55a11f0603a1577c16e0c106d1528bb3b95d917c510bdd84eeaffd6a48424decb79538181109bcae31b4b8e5c605de61992d4b72a25721f2bd981ad3a97ef25a745d02f4de4170d08c1033b20865b7bc47fec66234eaf93adc698d06af6a364641fe31738ce22f2b4d81ff85c5a97257dd8c4d89d6c049b615d8189a544f41e9ca8506ac70e2f29e84c6fa95d5c0327f7ea6f86280fd66ad4b393494c66cd90e27db755156d20bc3f9bacf0cba3689e5773458448bb722ec56a504491dc991e3b664b27952f574bf87add44d0a0527fc446326e903b0f79fb6b14fdb4bf8501aa66037c218c37536483b0c9f923f44fd9031bf23366db5602f1b102ed17c1fc1a9a2f606629c6f8a98092d2b623933c66e8faea272b77f313159c6101508a52723ac22671e4badef3b05b57e5f45fe4efb01a1cf190f8de92b81d60ec7a98d915775037efd717280216a68993235e8e851446ee8fff0a1c1dd2d4af3b3f822e21a3168e5ca332fae61eb66f8f2328f3274de4d472bb0687342fc9629bea0e1de5556a43fcf8a10233df4459470411f35ab9636a22082aff092fdbacddc8b94dc23e4754e5dd7212749bd49aa7c2b4eeeba623e966fc023376a70c5d27ce3b28cd69fb9153691892274a571c4db6ed1c86506156a161ab3b56f5b02a32a693f58dca2b70bfca8b7a31f3f8a864f004b99c43670d4872f3dff4e4526161d30a63226522ffb43a4d7a18b78bc79d3baf3e6d93f2095a3b75bd0239f1c0979cc6cece5781531adeaef224a7b92550b205bded5bc68c250945594be595222878f1a1ee042d1744e9fd07c12085dc3ed7b98007fbf34a27b616ea30d4bf6ba838b05e7259fbc6ae9f5fa8984c1ea0db2f58d6e2dbaee1a3e8c87fc6c79087bef23632909b10fec0e84618cdfcfc52ceda01d51f9ad1e49a5527b7e9160144a99a5f7bed6ce8064f4f8cf8fcaa946b62abe5805ef8607ae62fed335759b64eb13370b4f637a277baf981575a42c2cc489da78f481b030ca751b27621f5fbae888658c776115044b824c0e2d847c7dc545f1e2e574b7ee4c31bc30e29197dcf29cb715f10d6d27e1b20528db96433affb62af83e3901a6462a697f700d8ffa5a153bcd4fbca9a6ebfab1b72883413d582979ef8f9022e10a716b53fdcba96000ee21390d65f711325fa73f978e5238197e234959cec3bfc93003d4d90a1bed15a6ba0457819b001e7d94a199c2cd7adeaf0e5a11a6206184364dea64828faaf53aa6d3c6e96c3c1b05e9f68ddc4fa32ffefe2ad69f9b5a2c8f275b3a2c0d558d31e70d307c2752b187e215c8a619b61760eb912307a71d01e759fbb2ef405352bd30789b817c7f486b7d599d8a762f5c841786310bf1d7ebf78b6b1182501b54592f467300abd8f19c709b848aa7434dfda3639567ebbc7e241855c08e44b5b4ee3f00fa20848094e4c5a279904faef72ec1d573e44364196df8c5149792b91e2256ce91d2a82d5d75e2a990a13805e7d8c5c6726d7c9e66f2bec88cf13f7fda7adde2cd3c0f985259bdc06a0546eaf90168d261f29cd76c666d0edab51ec69063bc7ddccd6f66f990e34e646f8bd1de3a1d98bce4caa5332d84359545c348bd7941fd8b7facc7d0ba3285262da6925389d68b9f11d8648cd9d8398a0975c6235de2574c7c087106ba77c1e068d374c0c897aa09f387438d96610234b724d9259756f841e38a74572ee1721969aa14f5044f3b60672d8b7d88f196d8caf63c4c3bbf803dafd50db0eae8a9db1f249b2182674221497f57d46165a3ec7b19de99d45a24b8b01bb991876171a6892fdcd9800de8fa6a9612bd65eead41d2b4d9924f150a2fbfdc4306c6152fc207bdb195339963fe6ece53eb88797f680318c85cff281760407528eb5318a5f190c9a066133e1d1eb2b8e497e3093cfd02f71c2109fa64128df0fa26bb86afe9df636bdb9768e46d2bd4a275b86e65725bdc6fdc5751245db002da7ba3569546fee53acc19631ea4d19edbe67c39d5398ce8f2643f03f95de1de4794e10ec3c959b5807421d2065dc32673df44398ab848cbd3f11796bc7a6a9e815302eb91240b255260eca16cd9699a1c1d0326fa45a117f884d95284003efcdd47466ea9fbaf97c2f65739a65f34f5c8c815fdabafd65d92b533aa3bf6accbc175a04ae4ecdd3e5fc6084c85519bb7d61265aa7a7fc1a2a430ace977ddebc84463b3bf62c0b4446ccdafca7c66cf31f9af0e8e58023687260493e0b7aa8e9fe480c69b5e4e7d05a827c15eefcce915eefd7e771942079fbc595a193b3d239fcede24ab4f2cdb4a469e35e96a4c4483ca117f302fa2ddc60df6702dab291052bbe0a9d637e3722f84c84f05038f166c19a748b549f302113d6953c85191972c30eae597d8fbe1e01f32f2de267ef677a823b0810a489ec297584fd8456c82eab8d0e7b98ee716c3e85e656174e71e8ffccbf683d104e80404ce9626c36b7f146c78913fcd25f024647c2febd1906ba43e440d5183cae82325ca5bcbf465524c4bbfd597476f48bb3c3e7854058c7378eaad6733863b234c352a1d26b206879b90e5cb188c114b047e655f3e1b87ac5c5528141704bd863e031adf8916e588c509cad246ad175dd627a3f065baabab11363c404703f3b8492cdfd77c8a8ef2fa0b1b510175102e53b68b268cf18da3650db11c5d3bdf600da1f5e0ffe4cec1de1513312a96dfa5904daae7828e534a3d598c830b00a9df23bca5c9b897e70787e2cf3d720329dc297def42add0d50b0310b21b9b00055900ce05061ddfd84343401533f1d4db80a1242c6afbdc8ce504ad8041c1c8ed26a96e650e64debb2fef492160f3fa1f481f2f0ab34ca2789f19458aa9e1567f7dd1e5e0a7ee40639501eeb5ba5135254166df1d665c3f46e13022759e44c8fb682d4da83ab08bfe17043eb6b2de70a2f94dd2b93c6da55460179e18613245e054a8c783d678ddb782d514bec1a963ea732776de511a1ce73cda132c984e7070a293a2be5bdd7a3f54a6d320ecc16d5398899ff037b0e69e56904f37ceb1e4e586747fa7cf1aa9d399bcab8f1b6d49c493a5c1689e05b7c3fdd45007329f2d9dc44b33531b0c040240cb37e1a1d10cce1e696224962ff7bc45cd070a4bedb0056b4b640578d3d7af658aa91c99cc145d08680828fa420bc575d46a3c1584b1a9f1de2da0e6dfc855c5a11d1ff889f3e5acd0ab3de8ffe9a1f61b04c7e9b6c61a22977300edf5086c7922a8947b62d1036f77c9323b7025ddc0bb33ffc2e21774a83c1c121df99c834779d284e9b9bab9e11f86d3efc633ac0f143968ec3893dedc1cca49727a6e676247ab8de93a79249b3c8d428a97904d9a5695cc562edd08b01d1fe7f7f8e03d39dfd33e1c58ee49b0035d2dbbbe0b16eaedebecd238fffa9b6aca78997ac03e4d793d56e02c48d18fca6b31312c0f8a1f48c5988f72b992cbbb4e24d4da8eb2aeaa1c87a9e434695d0d710f1573a389c1f9247cddc9d54f337170ac6989df9a674ba4473a9664848d5a0064d1ab41d5e055723784d74e705fa5916fc53cb4eb2aa63ec084cdfa07cd2fbd08be5428fe627c976fa006068aabb7a27906d1c903abf1e9f250644b275914f8454d9a569290253b3849fad642cffa1c3273c8bd061f016b72fe939b23bf625bfb6ac930ee370de1c90bf4f6d93e6829ccb5a3e12c9f2e9e7545465af3f5fbf030616a70c6f90d461c1281d0b753ab4d73b019019a174f56e034992c438cd1aaff5520be54ed1f812fb360e0140f710da04380b9e337a45a58b59d6206d17a095852f55edc2a2b8185d11ca2e2d5eaab5d3172d69132c7ad12c06143c4ef966184cee8ac3c779a5d8ac21561f971b9bb6f336317dc8534bdfd2d2bb560c3473fe9ce01c40c67d68a80ab6f04b138e0c3c13dce5799fa9c7ac8aa125ed7cb41d845fbd1318c5bfe09295d6031044b0a97741ce0a20ed272c21baaa21f174977af2b30a4ada86ab49db8c4de7502157efae7bec400ef071b3bd024a222c0f222cc239f776ad38c9cc59cd6943da01517ab07d857c4d6456f521eae69a6e9f8f1b621ad8ec1caa096d00c462e8eedf6539727a1f1937eade31245abd8607eeb39e11aa5a89e145871343c9783300cd9ffdb782127b9b9998507d0daf10994a0f122434995aac297e47d98da8cd79255c709ce198800dd853a31baf9ce1ee03753581df664a39137d090fd9699bdc6ee4deea65c1ae8c9530a289cc1d1971d32c4ed139490460e746237e47dd0ed26758c0694755c3b5044f93e2fd0f7736cfce16cd7feb053f2b00156dce76310ba3dd0cf70bb2eb9f2fe932990275af59da71c273d907730fec39fa105f55380f1cb9278e52fe903d732b823253976c658ed13f5c345cfcd69661c88969cccfe49878a52e3d14f6ed04710f6ca087cdd425a9ed46042496f102b099ac3dbd55c2775caf6a3ccee5513beb09d679efdbf979ec4c1182b45216904a94d6a5aa19f966a20064981cf39a21249135742984d7411fad217c66598a4673a735a44163dcece3a7b95af170977a2ca48fbfddb9b09d44f15eafa732e841204615ac2ee621d8ab9</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 代码规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpStorm查找指定文件的修改历史</title>
      <link href="/archives/57521.html"/>
      <url>/archives/57521.html</url>
      
        <content type="html"><![CDATA[<p>打开需要查找的文件，对着文件右击选择Local History=&gt;Show History<br><img src="/images/phpstorm_show_history_1.png"><br><img src="/images/phpstorm_show_history_2.png"></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> phpStorm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP5 中clone Query对象</title>
      <link href="/archives/54284.html"/>
      <url>/archives/54284.html</url>
      
        <content type="html"><![CDATA[<p>当我们在给前端提供列表接口的时候，经常需要根据条件返回总条数和当页列表数据；这时，我们就需要复用共同的查询条件对数据库执行多次查询操作。</p><p>在Yii2里，可以通过clone处理：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$query</span> <span class="token operator">=</span> <span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'status'</span><span class="token operator">=&gt;</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">andFilterWhere</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token operator">=&gt;</span><span class="token variable">$kw</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$count</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">clone</span> <span class="token variable">$query</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$list</span> <span class="token operator">=</span> <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token operator">=&gt;</span><span class="token constant">SORT_DESC</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">asArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在thinkphp5中，使用如下代码进行clone，会存在问题，提示：<code>SQLSTATE[HY000]: General error: 2031</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$offset</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token variable">$pageSize</span><span class="token punctuation">;</span><span class="token variable">$query</span> <span class="token operator">=</span> <span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'artist_bill'</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'month'</span> <span class="token operator">=&gt;</span> <span class="token variable">$month</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$count</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">clone</span> <span class="token variable">$query</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$list</span> <span class="token operator">=</span> <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'id,title,month'</span><span class="token punctuation">)</span>    <span class="token operator">-&gt;</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token variable">$offset</span><span class="token punctuation">,</span> <span class="token variable">$pageSize</span><span class="token punctuation">)</span>    <span class="token operator">-&gt;</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span> <span class="token operator">=&gt;</span> <span class="token constant">SORT_DESC</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>如果把第3行改为：$count = $query-&gt;count();  第一个查询正常，之后的查询没有任何where条件；这是因为query执行完成后会把查询条件清空。</li><li>如果使用clone，打印处理的sql如下：<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> t_artist_bill <span class="token keyword">where</span> <span class="token identifier"><span class="token punctuation">`</span>month<span class="token punctuation">`</span></span> <span class="token operator">=</span> :where_AND_month<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>初步认为是参数没有绑定上去。应该也是query内部引用了一个对象，对象在clone之后与原有对象是一个地址引用。通过一步一步断点输出，确认在$this-&gt;builder-&gt;select($options);之后获得了bind数据。因此只需要解绑clone前后对象的builder属性即可完成query对象的复制。查看query对象的属性，只有builder,connection是对象，但是connection我们希望在整个请求中是一个单实例，所以没必要区分。<br>最终修改,新建query子类，添加__clone方法,指定clone后对新对象执行php $this-&gt;setBuilder();保证 clone之后的builder是一个新实例。<br>这样就可以正常使用clone了。</li></ul><p>另一种处理方式是把where条件提取出来共用：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">getList</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token keyword type-hint">string</span> <span class="token variable">$month</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$pageSize</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span><span class="token punctuation">{</span>    <span class="token variable">$offset</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token variable">$pageSize</span><span class="token punctuation">;</span>    <span class="token variable">$where</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$month</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$where</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'month'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$month</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'artist_bill'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$count</span> <span class="token operator">=</span> <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token variable">$where</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$list</span> <span class="token operator">=</span> <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token variable">$where</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'id,title,month'</span><span class="token punctuation">)</span>        <span class="token operator">-&gt;</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token variable">$offset</span><span class="token punctuation">,</span> <span class="token variable">$pageSize</span><span class="token punctuation">)</span>        <span class="token operator">-&gt;</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span> <span class="token operator">=&gt;</span> <span class="token constant">SORT_DESC</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'count'</span> <span class="token operator">=&gt;</span> <span class="token variable">$count</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'list'</span> <span class="token operator">=&gt;</span> <span class="token variable">$list</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ThinkPHP </tag>
            
            <tag> Query </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式六大原则</title>
      <link href="/archives/27856.html"/>
      <url>/archives/27856.html</url>
      
        <content type="html"><![CDATA[<h2 id="1、单一职责原则"><a href="#1、单一职责原则" class="headerlink" title="1、单一职责原则"></a>1、单一职责原则</h2><h2 id="2、开闭原则"><a href="#2、开闭原则" class="headerlink" title="2、开闭原则"></a>2、开闭原则</h2><h2 id="3、里氏替换原则"><a href="#3、里氏替换原则" class="headerlink" title="3、里氏替换原则"></a>3、里氏替换原则</h2><h2 id="4、接口隔离原则"><a href="#4、接口隔离原则" class="headerlink" title="4、接口隔离原则"></a>4、接口隔离原则</h2><h2 id="5、依赖倒置原则"><a href="#5、依赖倒置原则" class="headerlink" title="5、依赖倒置原则"></a>5、依赖倒置原则</h2><h2 id="6、迪米特原则"><a href="#6、迪米特原则" class="headerlink" title="6、迪米特原则"></a>6、迪米特原则</h2>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>锚定效应</title>
      <link href="/archives/56274.html"/>
      <url>/archives/56274.html</url>
      
        <content type="html"><![CDATA[<p>沉锚效应，心理学名词，指的是人们在对某人某事做出判断时，易受第一印象或第一信息支配，就像沉入海底的锚一样把人们的思想固定在某处。</p>]]></content>
      
      
      <categories>
          
          <category> 产品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 产品 </tag>
            
            <tag> 锚定效应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>目标管理</title>
      <link href="/archives/78421.html"/>
      <url>/archives/78421.html</url>
      
        <content type="html"><![CDATA[<h2 id="目标管理"><a href="#目标管理" class="headerlink" title="目标管理"></a>目标管理</h2><h2 id="向上管理"><a href="#向上管理" class="headerlink" title="向上管理"></a>向上管理</h2><h2 id="向下负责"><a href="#向下负责" class="headerlink" title="向下负责"></a>向下负责</h2><h2 id="激励团队"><a href="#激励团队" class="headerlink" title="激励团队"></a>激励团队</h2>]]></content>
      
      
      <categories>
          
          <category> 技术管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 目标管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>产品设计</title>
      <link href="/archives/73480.html"/>
      <url>/archives/73480.html</url>
      
        <content type="html"><![CDATA[<p>1、我们的手机上都装了很多APP，而现在的APP基本上都需要账号登录。那么问题来了，如果手机丢了，你最关心的是什么呢，是这些APP的账号信息泄露被不法份子使用，还是这个应用里的个人隐私数据泄露呢？个人感觉可以从以下几个方面提高产品的安全性：</p><p>  A、APP内部涉及到交易功能需校验交易密码；</p><p>  B、在进入指定页面的时候，添加面容ID/手势解锁，如启动时、进入个人中心时等；</p><p>  C、APP内可进行设备管理，APP内可查看设备的最近登录信息，并解绑当前设备外的指定设备(或删除指定设备数据)；</p><p>  D、对于不合常规的系列行为进行限制，如：修改登录密码后立即注销账号。</p>]]></content>
      
      
      <categories>
          
          <category> 产品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 产品设计 </tag>
            
            <tag> 产品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据库优化</title>
      <link href="/archives/34713.html"/>
      <url>/archives/34713.html</url>
      
        <content type="html"><![CDATA[<h2 id="1、优化思路"><a href="#1、优化思路" class="headerlink" title="1、优化思路"></a>1、优化思路</h2><ul><li>1）表的数据类型是否合理，要遵守选取数据类型越简单越小的原则</li><li>2）表中碎片是否整理</li><li>3）表的统计信息是否收集，只有统计信息准确，执行计划才能帮助优化SQL</li><li>4）查看执行计划，检查索引使用情况，没有用到索引，考虑创建</li><li>5）创建索引前，查看索引的选择性distinct，判断该字段是否适创建索引<br>索引选择性指不重复的索引值和数据记录总数的比值，越接近1越好；主键索引和唯一索引选择性是1</li><li>6）创建索引后，再查看执行计划，对比两次结果，查看效率是否提高<h2 id="2、慢查询优化"><a href="#2、慢查询优化" class="headerlink" title="2、慢查询优化"></a>2、慢查询优化</h2></li><li>1）如果一个select语句中没有where条件，只有单纯的group by | order by，这是无法使用索引的。需要有where作为基础铺垫，遵从最左原则才能使用索引。</li></ul>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 数据库优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统设计</title>
      <link href="/archives/76532.html"/>
      <url>/archives/76532.html</url>
      
        <content type="html"><![CDATA[<p>1、对于初期单一系统的产品来说，一个数据库➕一个平台程序即可；</p><p>2、对于含有两个及以上平台的初期产品来说，系统结构应该是：多个平台程序➕一个服务中心➕一个或多个数据库；</p><p>3、对于多平台且需与第三方交互的产品来说，系统结构应该是：多个平台程序➕一个开放平台（含接口及订阅）➕一个服务中台（一个服务中心➕一个socket服务器➕一个异步数据处理中心）➕多个数据库；</p>]]></content>
      
      
      <categories>
          
          <category> 架构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 架构 </tag>
            
            <tag> 系统设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL脚本执行中，预防误处理数据的方法</title>
      <link href="/archives/83475.html"/>
      <url>/archives/83475.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="07a4cbdc8beee1bf5a993e5dca00dc8b39ce004ad9fc8f5bb6434529128ac6e4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 脚本执行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS点击复制指定内容</title>
      <link href="/archives/3652.html"/>
      <url>/archives/3652.html</url>
      
        <content type="html"><![CDATA[<p>点击按钮，复制指定文本框内容，代码如下：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">function</span> <span class="token function">copy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> str <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"my-data"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    str<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 选择对象</span>    document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">"Copy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 执行浏览器复制命令</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"复制成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-data<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>我的测试内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onClick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">copy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>复制<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 复制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux中rz的使用</title>
      <link href="/archives/34450.html"/>
      <url>/archives/34450.html</url>
      
        <content type="html"><![CDATA[<p>我们常常需要在客户端和服务器(windows和linux)之间互传文件，这就可以使用rz(sz)命令。</p><ol><li><p>如果服务器不支持rz命令，需安装：</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum -y <span class="token function">install</span> lrzsz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>从客户端上传文件(可多选)到服务器：</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> rz<span class="token function">sudo</span> rz -be<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>从服务端发送文件到客户端：</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> sz filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>卸载rz：</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum remove lrzsz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> rz </tag>
            
            <tag> sz </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web安全</title>
      <link href="/archives/35576.html"/>
      <url>/archives/35576.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL常见报错问题</title>
      <link href="/archives/19794.html"/>
      <url>/archives/19794.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>[Err] 1066 - Not unique table/alias: ‘s’</p><p>原因：SQL语句中存在多个表的别名为’s’</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP运维笔记</title>
      <link href="/archives/35292.html"/>
      <url>/archives/35292.html</url>
      
        <content type="html"><![CDATA[<ol><li>常见命令：<br> 查看PHP扩展：<code>php -m</code><br> 查看扩展的版本信息：<code>php -ri 扩展名</code>  如：<code>php -ri redis</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> PHP </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown笔记</title>
      <link href="/archives/45387.html"/>
      <url>/archives/45387.html</url>
      
        <content type="html"><![CDATA[<ol><li>解决有序列表排序失败的问题，格式如下： <pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html">1.[空格]测试文字1 [Tab]-[空格]测试文字1-1 [Tab]-[空格]测试文字1-2 2.[空格]测试文字2 [Tab]-[空格]测试文字2-1 [Tab][Tab]-[空格]测试文字2-1-1 [Tab][Tab]-[空格]测试文字2-1-2 [Tab]-[空格]测试文字2-2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 代码段使用Tab退格</li></ol>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prolog笔记</title>
      <link href="/archives/45387.html"/>
      <url>/archives/45387.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-加载脚本"><a href="#1-加载脚本" class="headerlink" title="1. 加载脚本"></a>1. 加载脚本</h2><p><code>?- ['E:/SWI-Prolog/test/friend.pl'].       %true</code></p><h2 id="2-教程"><a href="#2-教程" class="headerlink" title="2. 教程"></a>2. 教程</h2><p><a href="https://riptutorial.com/zh-CN/prolog">https://riptutorial.com/zh-CN/prolog</a></p><h2 id="3-简单的计算求解："><a href="#3-简单的计算求解：" class="headerlink" title="3. 简单的计算求解："></a>3. 简单的计算求解：</h2><p><code>?- X is 3*7.       %X = 21</code></p><h2 id="4-CLP（约束逻辑编程）库的使用"><a href="#4-CLP（约束逻辑编程）库的使用" class="headerlink" title="4. CLP（约束逻辑编程）库的使用"></a>4. CLP（约束逻辑编程）库的使用</h2><p>求解方程，CLP只能处理整数运算<br>    </p><pre class="line-numbers language-none"><code class="language-none">?- use_module(library(clpfd)).?- Y #= 3+4.                    %Y = 7.?- 5 #= 4+W.                    %W = 1.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p></p><h2 id="5-单行注释"><a href="#5-单行注释" class="headerlink" title="5. 单行注释"></a>5. 单行注释</h2><p>使用”%”</p><h2 id="6-知识库"><a href="#6-知识库" class="headerlink" title="6. 知识库"></a>6. 知识库</h2><p>事实 + 规则 = 知识库。<br>事实是我们对这个世界直接观察的结果。规则是关于现实世界的逻辑推论。</p><h2 id="7-合一（unification）"><a href="#7-合一（unification）" class="headerlink" title="7. 合一（unification）"></a>7. 合一（unification）</h2><p>找出那些使规则匹配的值。<br>合一有时候不是唯一的，可以通过“;”来进行追问，有时候我们可能不满足于一个答案。</p><h2 id="8-列表-x2F-元组"><a href="#8-列表-x2F-元组" class="headerlink" title="8. 列表/元组"></a>8. 列表/元组</h2><p>程序 = 算法 + 数据结构。      列表是变长的容器，元组是定长的容器。<br>    </p><pre class="line-numbers language-none"><code class="language-none">?- (1,2,3) = (1,2,3).               %元组yes?- [A,B,C] = [A,B,C].               %列表yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p></p><h2 id="9-内置谓词"><a href="#9-内置谓词" class="headerlink" title="9. 内置谓词"></a>9. 内置谓词</h2><h3 id="length"><a href="#length" class="headerlink" title="length"></a>length</h3><p>获取列表的长度   <code>?- length([1,2,3],L).      %L = 3.</code></p><h3 id="append"><a href="#append" class="headerlink" title="append"></a>append</h3><p>可以用来合并两个列表<br>    </p><pre class="line-numbers language-none"><code class="language-none">?- append([1],[2],What).      %What = [1, 2].?- append([1],W,[1,2,3]).      %W = [2, 3].<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p></p><h3 id="member"><a href="#member" class="headerlink" title="member"></a>member</h3><p>检查某一个值是否在一个列表内<br>    </p><pre class="line-numbers language-none"><code class="language-none">?- member(1,[1,2]).      %true.?-  member(3,[1,2]).      %false.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p></p>]]></content>
      
      
      <categories>
          
          <category> Prolog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Prolog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHPExcel笔记</title>
      <link href="/archives/10294.html"/>
      <url>/archives/10294.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-设置字体和样式"><a href="#1-设置字体和样式" class="headerlink" title="1. 设置字体和样式"></a>1. 设置字体和样式</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$objPHPExcel</span>-<span class="token operator">&gt;</span>getActiveSheet<span class="token punctuation">(</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>getStyle<span class="token punctuation">(</span><span class="token string">'A1'</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>applyFromArray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'font'</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">'bold'</span><span class="token operator">=</span><span class="token operator">&gt;</span>true<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//设置单元格A1字体加粗<span class="token variable">$objPHPExcel</span>-<span class="token operator">&gt;</span>getActiveSheet<span class="token punctuation">(</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>getStyle<span class="token punctuation">(</span><span class="token string">'A1:GL1'</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>applyFromArray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'font'</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">'bold'</span><span class="token operator">=</span><span class="token operator">&gt;</span>true<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//设置单元格A1-GL1字体加粗<span class="token variable">$objPHPExcel</span>-<span class="token operator">&gt;</span>getActiveSheet<span class="token punctuation">(</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>getStyle<span class="token punctuation">(</span><span class="token string">'A1:B3'</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>getFont<span class="token punctuation">(</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>setBold<span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>//设置A1-B3之间的单元格字体加粗<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-设置行高"><a href="#2-设置行高" class="headerlink" title="2. 设置行高"></a>2. 设置行高</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$objPHPExcel</span>-<span class="token operator">&gt;</span>getActiveSheet<span class="token punctuation">(</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>getDefaultRowDimension<span class="token punctuation">(</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>setRowHeight<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//设置默认行高<span class="token variable">$objPHPExcel</span>-<span class="token operator">&gt;</span>getActiveSheet<span class="token punctuation">(</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>getRowDimension<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>setRowHeight<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//设置第一行行高<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-设置列宽"><a href="#3-设置列宽" class="headerlink" title="3. 设置列宽"></a>3. 设置列宽</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$objPHPExcel</span>-<span class="token operator">&gt;</span>getActiveSheet<span class="token punctuation">(</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>getColumnDimension<span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>setWidth<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//设置A列列宽<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-单元格内容特定位置换行"><a href="#4-单元格内容特定位置换行" class="headerlink" title="4. 单元格内容特定位置换行"></a>4. 单元格内容特定位置换行</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$objPHPExcel</span>-<span class="token operator">&gt;</span>setActiveSheetIndex<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>setCellValue<span class="token punctuation">(</span><span class="token string">'A3'</span>, <span class="token string">"第三节<span class="token entity" title="\n">\n</span>11:00-12:00"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   //注意双引号<span class="token variable">$objPHPExcel</span>-<span class="token operator">&gt;</span>getActiveSheet<span class="token punctuation">(</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>getStyle<span class="token punctuation">(</span><span class="token string">'A3'</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>getAlignment<span class="token punctuation">(</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>setWrapText<span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Excel </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL自定义函数</title>
      <link href="/archives/1366.html"/>
      <url>/archives/1366.html</url>
      
        <content type="html"><![CDATA[<p>有时候要对MySQL数据进行批量处理，仅仅依靠已有的内置函数是不够的，这个时候就需要添加一些自定义的函数了，下面列举一些常用的自定义函数：</p><ol><li><p>批量处理字符串，将”FEEED305904B”转为”FE:EE:D3:05:90:4B”格式：</p> <pre class="line-numbers language-none"><code class="language-none">DROP FUNCTION IF EXISTS `SPLIT_STR`; delimiter $$CREATE FUNCTION SPLIT_STR(  x VARCHAR(255),  delim VARCHAR(12),  pos INT)RETURNS VARCHAR(255)    BEGIN    DECLARE i INT DEFAULT 0;    DECLARE s text DEFAULT '';    myloop: LOOP        SET i = i+pos;        SET s = CONCAT(s,delim,left(x,pos));        SET x = right(x,length(x)-pos);        if pos&gt;length(x) then            if length(x)&gt;0 then                SET s = CONCAT(s,delim,x);            end if;            leave myloop;        end if;    END LOOP myloop;RETURN right(s,length(s)-length(delim));END $$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><p>调用：<code>SELECT SPLIT_STR('FEEED305904B', ':', 2);</code></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 自定义函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP生成数据字典</title>
      <link href="/archives/20269.html"/>
      <url>/archives/20269.html</url>
      
        <content type="html"><![CDATA[<p>通过php代码生成MySQL数据字典，代码如下：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">/** * 生成mysql数据字典 */</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-type: text/html; charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//配置数据库</span><span class="token variable">$dbserver</span>   <span class="token operator">=</span> <span class="token string double-quoted-string">"127.0.0.1"</span><span class="token punctuation">;</span><span class="token variable">$dbusername</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"root"</span><span class="token punctuation">;</span><span class="token variable">$dbpassword</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"root"</span><span class="token punctuation">;</span><span class="token variable">$database</span>   <span class="token operator">=</span> <span class="token string double-quoted-string">"demodb"</span><span class="token punctuation">;</span><span class="token comment">//其他配置</span><span class="token variable">$mysql_conn</span> <span class="token operator">=</span> @<span class="token function">mysql_connect</span><span class="token punctuation">(</span><span class="token variable">$dbserver</span><span class="token punctuation">,</span> <span class="token variable">$dbusername</span><span class="token punctuation">,</span> <span class="token variable">$dbpassword</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Mysql connect is error."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">mysql_select_db</span><span class="token punctuation">(</span><span class="token variable">$database</span><span class="token punctuation">,</span> <span class="token variable">$mysql_conn</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'SET NAMES utf8'</span><span class="token punctuation">,</span> <span class="token variable">$mysql_conn</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$table_result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'show tables'</span><span class="token punctuation">,</span> <span class="token variable">$mysql_conn</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$no_show_table</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//不需要显示的表</span><span class="token variable">$no_show_field</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//不需要显示的字段</span><span class="token comment">//取得所有的表名</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token function">mysql_fetch_array</span><span class="token punctuation">(</span><span class="token variable">$table_result</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$no_show_table</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token variable">$tables</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'TABLE_NAME'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//替换所以表的表前缀</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token variable">$prefix</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'wxaj'</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$tables</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$val</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token variable">$tableName</span> <span class="token operator">=</span> <span class="token variable">$val</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'TABLE_NAME'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'_'</span><span class="token punctuation">,</span><span class="token variable">$tableName</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token variable">$prefix</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token variable">$string</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$prefix</span><span class="token punctuation">;</span>  <span class="token variable">$newTableName</span> <span class="token operator">=</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'_'</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'rename table '</span><span class="token operator">.</span><span class="token variable">$tableName</span><span class="token operator">.</span><span class="token string single-quoted-string">' TO '</span><span class="token operator">.</span><span class="token variable">$newTableName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"替换成功！"</span><span class="token punctuation">;</span><span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//循环取得所有表的备注及表中列消息</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$tables</span> <span class="token keyword">as</span> <span class="token variable">$k</span><span class="token operator">=&gt;</span><span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$sql</span>  <span class="token operator">=</span> <span class="token string single-quoted-string">'SELECT * FROM '</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'INFORMATION_SCHEMA.TABLES '</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'WHERE '</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">"table_name = '<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$v</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'TABLE_NAME'</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>'  AND table_schema = '<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$database</span><span class="token punctuation">}</span></span>'"</span><span class="token punctuation">;</span>    <span class="token variable">$table_result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span> <span class="token variable">$mysql_conn</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$t</span> <span class="token operator">=</span> <span class="token function">mysql_fetch_array</span><span class="token punctuation">(</span><span class="token variable">$table_result</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$tables</span><span class="token punctuation">[</span><span class="token variable">$k</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'TABLE_COMMENT'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$t</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'TABLE_COMMENT'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$sql</span>  <span class="token operator">=</span> <span class="token string single-quoted-string">'SELECT column_name FROM '</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'INFORMATION_SCHEMA.`KEY_COLUMN_USAGE` '</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'WHERE '</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">"table_name = '<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$v</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'TABLE_NAME'</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>'  AND constraint_name = 'PRIMARY'"</span><span class="token punctuation">;</span>    <span class="token variable">$pk_result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span> <span class="token variable">$mysql_conn</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$pks</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$t</span> <span class="token operator">=</span> <span class="token function">mysql_fetch_array</span><span class="token punctuation">(</span><span class="token variable">$pk_result</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$pks</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$t</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'column_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$tables</span><span class="token punctuation">[</span><span class="token variable">$k</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'PRIMARY_KEY'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$pks</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span>  <span class="token operator">=</span> <span class="token string single-quoted-string">'SELECT * FROM '</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'INFORMATION_SCHEMA.COLUMNS '</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'WHERE '</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">"table_name = '<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$v</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'TABLE_NAME'</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>' AND table_schema = '<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$database</span><span class="token punctuation">}</span></span>'"</span><span class="token punctuation">;</span>    <span class="token variable">$fields</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$field_result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span> <span class="token variable">$mysql_conn</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$t</span> <span class="token operator">=</span> <span class="token function">mysql_fetch_array</span><span class="token punctuation">(</span><span class="token variable">$field_result</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$fields</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$t</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$tables</span><span class="token punctuation">[</span><span class="token variable">$k</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'COLUMN'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$fields</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">mysql_close</span><span class="token punctuation">(</span><span class="token variable">$mysql_conn</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token comment">//循环所有表</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$tables</span> <span class="token keyword">as</span> <span class="token variable">$k</span><span class="token operator">=&gt;</span><span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;h3&gt;'</span> <span class="token operator">.</span> <span class="token punctuation">(</span><span class="token variable">$k</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'、'</span> <span class="token operator">.</span> <span class="token variable">$v</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'TABLE_COMMENT'</span><span class="token punctuation">]</span> <span class="token operator">.</span><span class="token string single-quoted-string">'  （'</span><span class="token operator">.</span> <span class="token variable">$v</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'TABLE_NAME'</span><span class="token punctuation">]</span><span class="token operator">.</span> <span class="token string single-quoted-string">'）&lt;/h3&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span>    <span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;table border="1" cellspacing="0" cellpadding="0" width="100%"&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span>    <span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;tbody&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;tr&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;th&gt;字段名&lt;/th&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;th&gt;数据类型&lt;/th&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;th&gt;默认值&lt;/th&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;th&gt;允许非空&lt;/th&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;th&gt;自动递增&lt;/th&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;th&gt;是否主键&lt;/th&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;th&gt;备注&lt;/th&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;/tr&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'COLUMN'</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$f</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$no_show_field</span><span class="token punctuation">[</span><span class="token variable">$v</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'TABLE_NAME'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$no_show_field</span><span class="token punctuation">[</span><span class="token variable">$v</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'TABLE_NAME'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token variable">$no_show_field</span><span class="token punctuation">[</span><span class="token variable">$v</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'TABLE_NAME'</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'COLUMN_NAME'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$no_show_field</span><span class="token punctuation">[</span><span class="token variable">$v</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'TABLE_NAME'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;tr&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;td class="c1"&gt;'</span> <span class="token operator">.</span> <span class="token variable">$f</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'COLUMN_NAME'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;/td&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;td class="c2"&gt;'</span> <span class="token operator">.</span> <span class="token variable">$f</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'COLUMN_TYPE'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;/td&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;td class="c3"&gt;'</span> <span class="token operator">.</span> <span class="token variable">$f</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'COLUMN_DEFAULT'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;/td&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;td class="c4"&gt;'</span> <span class="token operator">.</span> <span class="token variable">$f</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'IS_NULLABLE'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;/td&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;td class="c5"&gt;'</span> <span class="token operator">.</span> <span class="token punctuation">(</span><span class="token variable">$f</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'EXTRA'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string single-quoted-string">'auto_increment'</span><span class="token operator">?</span><span class="token string single-quoted-string">'是'</span><span class="token punctuation">:</span><span class="token string single-quoted-string">'&amp;nbsp;'</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;/td&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;td class="c6"&gt;'</span> <span class="token operator">.</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'COLUMN_NAME'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$v</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'PRIMARY_KEY'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token string single-quoted-string">'是'</span><span class="token punctuation">:</span><span class="token string single-quoted-string">'&amp;nbsp;'</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;/td&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;td class="c7"&gt;'</span> <span class="token operator">.</span> <span class="token variable">$f</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'COLUMN_COMMENT'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;/td&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;/tr&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;/tbody&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'&lt;/table&gt;'</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter important">?&gt;</span></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">doctype</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>数据字典<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>generator<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ThinkDb V1.0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Crazy_boy<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>copyright<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2014-208 zotuo.com<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">body, td, th</span> <span class="token punctuation">{</span> <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"微软雅黑"</span><span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token selector">.warp</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span>auto<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span>900px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.warp h3</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span> <span class="token property">line-height</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span> <span class="token property">margin-top</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">table</span> <span class="token punctuation">{</span> <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #CCC<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> #efefef<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token selector">table th</span> <span class="token punctuation">{</span> <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span> <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 26px<span class="token punctuation">;</span> <span class="token property">line-height</span><span class="token punctuation">:</span> 26px<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #CCC<span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span>5px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">table td</span> <span class="token punctuation">{</span> <span class="token property">height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #CCC<span class="token punctuation">;</span> <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span>5px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.c1</span> <span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token selector">.c2</span> <span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token selector">.c3</span> <span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token selector">.c4</span> <span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.c5</span> <span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.c6</span> <span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.c7</span> <span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 270px<span class="token punctuation">;</span> <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>warp<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>数据字典<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$html</span><span class="token punctuation">;</span> <span class="token delimiter important">?&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中$dbserver、$dbusername、$dbpassword、$database需配置为相应的数据库IP地址、用户名、密码、数据库名。<br>代码下载：<a href="/codes/dictionary.php">dictionary.php</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> PHP </tag>
            
            <tag> 数据字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle笔记</title>
      <link href="/archives/48959.html"/>
      <url>/archives/48959.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>强制并行处理：<code>/*+ monitor parallel(8)*/</code></p></li><li><p>plsql查看sql性能：F5</p></li><li><p>在oracle中有时候需要进行MySQL中的find_in_set查询，故封装了如下函数：</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">CREATE OR REPLACE FUNCTION FIND_IN_SET<span class="token punctuation">(</span>piv_str1 varchar2, piv_str2 varchar2, p_sep varchar2 :<span class="token operator">=</span> <span class="token string">','</span><span class="token punctuation">)</span>RETURN NUMBER IS  l_idx    number:<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> -- 用于计算piv_str2中分隔符的位置  str      varchar2<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  -- 根据分隔符截取的子字符串  piv_str  varchar2<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span> :<span class="token operator">=</span> piv_str2<span class="token punctuation">;</span> -- 将piv_str2赋值给piv_str  res      number:<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> -- 返回结果BEGIN-- 如果piv_str中没有分割符，直接判断piv_str1和piv_str是否相等，相等 <span class="token assign-left variable">res</span><span class="token operator">=</span><span class="token number">1</span>IF instr<span class="token punctuation">(</span>piv_str, p_sep, <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span> THEN   IF piv_str <span class="token operator">=</span> piv_str1 THEN      res:<span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>   END IF<span class="token punctuation">;</span>ELSE-- 循环按分隔符截取piv_strLOOP    l_idx :<span class="token operator">=</span> instr<span class="token punctuation">(</span>piv_str,p_sep<span class="token punctuation">)</span><span class="token punctuation">;</span>-- 当piv_str中还有分隔符时      IF l_idx <span class="token operator">&gt;</span> <span class="token number">0</span> THEN   -- 截取第一个分隔符前的字段str         str:<span class="token operator">=</span> substr<span class="token punctuation">(</span>piv_str,1,l_idx-1<span class="token punctuation">)</span><span class="token punctuation">;</span>   -- 判断 str 和piv_str1 是否相等，相等 <span class="token assign-left variable">res</span><span class="token operator">=</span><span class="token number">1</span> 并结束循环判断         IF str <span class="token operator">=</span> piv_str1 THEN           res:<span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>           EXIT<span class="token punctuation">;</span>         END IF<span class="token punctuation">;</span>        piv_str :<span class="token operator">=</span> substr<span class="token punctuation">(</span>piv_str,l_idx+length<span class="token punctuation">(</span>p_sep<span class="token punctuation">))</span><span class="token punctuation">;</span>      ELSE   -- 当截取后的piv_str 中不存在分割符时，判断piv_str和piv_str1是否相等，相等 <span class="token assign-left variable">res</span><span class="token operator">=</span><span class="token number">1</span>        IF piv_str <span class="token operator">=</span> piv_str1 THEN           res:<span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        END IF<span class="token punctuation">;</span>        -- 无论最后是否相等，都跳出循环        EXIT<span class="token punctuation">;</span>      END IF<span class="token punctuation">;</span>END LOOP<span class="token punctuation">;</span>-- 结束循环END IF<span class="token punctuation">;</span>-- 返回resRETURN res<span class="token punctuation">;</span>END FIND_IN_SET<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>日期转时间戳函数</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">create or replace <span class="token keyword">function</span> oracle_to_unix<span class="token punctuation">(</span>in_date IN DATE<span class="token punctuation">)</span> <span class="token builtin class-name">return</span> number is    begin         return<span class="token punctuation">(</span> <span class="token punctuation">(</span>in_date -TO_DATE<span class="token punctuation">(</span><span class="token string">'19700101'</span>,<span class="token string">'yyyymmdd'</span><span class="token punctuation">))</span>*86400 - TO_NUMBER<span class="token punctuation">(</span>SUBSTR<span class="token punctuation">(</span>TZ_OFFSET<span class="token punctuation">(</span>sessiontimezone<span class="token punctuation">)</span>,1,3<span class="token punctuation">))</span>*3600<span class="token punctuation">)</span><span class="token punctuation">;</span>    end oracle_to_unix<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>时间戳转日期函数</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">create or replace <span class="token keyword">function</span> unix_to_oracle<span class="token punctuation">(</span>in_number NUMBER<span class="token punctuation">)</span> <span class="token builtin class-name">return</span> <span class="token function">date</span> is    begin        return<span class="token punctuation">(</span>TO_DATE<span class="token punctuation">(</span><span class="token string">'19700101'</span>,<span class="token string">'yyyymmdd'</span><span class="token punctuation">)</span> + in_number/86400 +TO_NUMBER<span class="token punctuation">(</span>SUBSTR<span class="token punctuation">(</span>TZ_OFFSET<span class="token punctuation">(</span>sessiontimezone<span class="token punctuation">)</span>,1,3<span class="token punctuation">))</span>/24<span class="token punctuation">)</span><span class="token punctuation">;</span>    end unix_to_oracle<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> Oracle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>心跳包机制</title>
      <link href="/archives/37766.html"/>
      <url>/archives/37766.html</url>
      
        <content type="html"><![CDATA[<ol><li>心跳包机制：主要也就是用于长连接的保活和断线处理。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 心跳 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心跳 </tag>
            
            <tag> 心跳包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript笔记</title>
      <link href="/archives/59091.html"/>
      <url>/archives/59091.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>如果想获取ajax里的function返回值，可用同步ajax。</p></li><li><p>JavaScript不定参数</p> <pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>JavaScript不定参数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'one'</span><span class="token punctuation">,</span><span class="token string">'two'</span><span class="token punctuation">,</span><span class="token string">'three'</span><span class="token punctuation">,</span><span class="token string">'four'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 前端 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Excel使用小技巧</title>
      <link href="/archives/9067.html"/>
      <url>/archives/9067.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>excel固定第一行：选择第二行，点击视图里的冻结窗口即可。</p></li><li><p>excel分列：<br> 如将某一列的数据由C4159D5953D8转为C4:15:9D:59:53:D8格式：<br> <code>公式为：=left(A1,2) &amp; ":" &amp; mid(A1,3,2) &amp; ":" &amp; mid(A1,5,2) &amp; ":" &amp; mid(A1,7,2) &amp; ":" &amp; mid(A1,9,2) &amp; ":" &amp; right(A1,2)</code></p></li><li><p>删除重复项：<br> 选中数据区域-&gt;数据-&gt;删除重复项-&gt;确定</p></li><li><p>VLOOKUP函数的使用</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Excel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Excel </tag>
            
            <tag> 使用技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言学习</title>
      <link href="/archives/62863.html"/>
      <url>/archives/62863.html</url>
      
        <content type="html"><![CDATA[<p>** 之前断断续续看了一些R语言的视频，一直没什么效果，看来还得做笔记：**</p><ol><li>&lt;- 是赋值的意思</li><li>向量是下标以1开始的</li><li>区分大小写</li><li>路径：<code>C://a.txt</code></li><li>round：四舍五入</li></ol>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SEO——权重转移</title>
      <link href="/archives/16774.html"/>
      <url>/archives/16774.html</url>
      
        <content type="html"><![CDATA[<p>** 产品列表存在多页，或者文章内容过多存在多页时，为了SEO考虑，避免权重流失，内容重复，可以通过下面的方法优化：**</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canonical<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>主页url<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Google 等搜索引擎最终都会只收录 canonical 标签指定的这个网址，搜索引擎会将其它页面作为重复内容，这些重复的内容不再参与页面的权重分配(如 Google 的 PR 值)。</p><p>如：<br><a href="https://s.1688.com/selloffer/-C6B7C5C6CDAFD0AC.html?beginPage=1">https://s.1688.com/selloffer/-C6B7C5C6CDAFD0AC.html?beginPage=1</a><br><a href="https://s.1688.com/selloffer/-C6B7C5C6CDAFD0AC.html?beginPage=2">https://s.1688.com/selloffer/-C6B7C5C6CDAFD0AC.html?beginPage=2</a><br><a href="https://s.1688.com/selloffer/-C6B7C5C6CDAFD0AC.html?beginPage=3">https://s.1688.com/selloffer/-C6B7C5C6CDAFD0AC.html?beginPage=3</a><br><a href="https://s.1688.com/selloffer/-C6B7C5C6CDAFD0AC.html?beginPage=4">https://s.1688.com/selloffer/-C6B7C5C6CDAFD0AC.html?beginPage=4</a><br>……<br><a href="https://s.1688.com/selloffer/-C6B7C5C6CDAFD0AC.html?beginPage=45">https://s.1688.com/selloffer/-C6B7C5C6CDAFD0AC.html?beginPage=45</a></p><p>就可以在每个页面的head标签内添加代码：</p><link rel="canonical" href="https://s.1688.com/selloffer/-C6B7C5C6CDAFD0AC.html">]]></content>
      
      
      <categories>
          
          <category> SEO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SEO </tag>
            
            <tag> 权重转移 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go语言基础</title>
      <link href="/archives/33631.html"/>
      <url>/archives/33631.html</url>
      
        <content type="html"><![CDATA[<p>** 自学Go语言的过程漫长而坎坷，先记录一些基础知识：**</p><ol><li>执行go文件：<code>E:\Go_WorkSpace&gt;go run test.go</code></li><li>把go程序编译成exe文件：<code>E:\Go_WorkSpace&gt;go build test.go</code></li><li>打印内容：<code>fmt.Printf("Hello,World!")</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> 语言基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitBook使用笔记</title>
      <link href="/archives/7888.html"/>
      <url>/archives/7888.html</url>
      
        <content type="html"><![CDATA[<p>使用GitBook来写书还是比较方便的，可以部署在github上的，总的来说，不太复杂。现记录一些常用的操作，方便大家参考。</p><h5 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h5><ol><li>编译文件生成网页<code>gitbook build</code></li><li>启动服务<code> gitbook serve</code></li><li>安装可以参考这个网页 <a href="https://www.jianshu.com/p/421cc442f06c">gitbook安装</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> GitBook </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitBook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo使用笔记</title>
      <link href="/archives/3280.html"/>
      <url>/archives/3280.html</url>
      
        <content type="html"><![CDATA[<p>这个博客网站是使用hexo搭建，部署在github上的，总的来说，不太复杂。现记录一些常用的操作，方便大家参考。</p><h5 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h5><ol><li>清除当前缓存<code>$ hexo clean</code></li><li>重新生成并部署到github上<code>$ hexo g -d</code></li><li>启动服务<code> $ hexo s</code></li><li>新建页面<code>$ hexo new page categories</code></li></ol><h4 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h4><ol><li><p>如何在首页设置「阅读全文」?<br> 在首页显示一篇文章的部分内容(或者摘要)，并提供一个链接(「阅读全文」)跳转到文章详情页。 NexT 提供以下三种方式：</p><ol><li>在文章中使用 <span id="more"></span> 手动进行截断，Hexo 提供的方式(<font color="#FF0000">推荐</font> )</li><li>在文章的 <a href="https://hexo.io/docs/front-matter.html">front-matter</a> 中添加 description，并提供文章摘录</li><li>自动形成摘要，在 主题配置文件_config.yml 中添加： <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">auto_excerpt:  enable: <span class="token boolean">true</span>  length: <span class="token number">150</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol></li></ol><p>默认截取的长度为 150 字符，可以根据需要自行设定。</p><p>建议使用 <!-- more -->方式，既可以精确控制需要显示的摘录内容， 还可以让 Hexo 中的插件更好的识别。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker使用</title>
      <link href="/archives/5123.html"/>
      <url>/archives/5123.html</url>
      
        <content type="html"><![CDATA[<ol><li>windows7 安装docker，需要利用 docker toolbox 来安装。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>架构学习</title>
      <link href="/archives/8864.html"/>
      <url>/archives/8864.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>架构设计的主要目的是为了解决软件系统复杂度带来的问题。</p></li><li><p>架构的复杂度来源：高性能、高可用、可扩展性、其它(低成本、安全、规模等)。</p></li><li><p>架构设计的三原则：合适优于业界领先、简单优于复杂、演化优于一步到位。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 架构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件架构 </tag>
            
            <tag> 架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高德地图API使用</title>
      <link href="/archives/26635.html"/>
      <url>/archives/26635.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>高德地图的覆盖物label默认是蓝框白底的，className为amap-marker-label，可以通过css来修改样式。如：</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>style<span class="token operator">&gt;</span>    .amap-marker-label<span class="token punctuation">{</span>        height:40px<span class="token punctuation">;</span>        width:120px<span class="token punctuation">;</span>        background-color: red<span class="token punctuation">;</span>        border: solid 1px black<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span>/style<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>高德地图，根据地址搜索经纬度，再次搜索时清除遮盖物：</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">var markers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>map.remove<span class="token punctuation">(</span>markers<span class="token punctuation">)</span><span class="token punctuation">;</span>markers.push<span class="token punctuation">(</span>marker<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 地图API </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高德地图 </tag>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>富文本编辑器</title>
      <link href="/archives/1791.html"/>
      <url>/archives/1791.html</url>
      
        <content type="html"><![CDATA[<ol><li>解决umeditor富文本内容居中可能失效的问题：更改umeditor.config.js的xss过滤为false<br> 即：<code>,xssFilterRules: false,inputXssFilter: false,outputXssFilter: false</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 富文本编辑器 </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记</title>
      <link href="/archives/45387.html"/>
      <url>/archives/45387.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-mysql根据汉字首字母排序的方法"><a href="#1-mysql根据汉字首字母排序的方法" class="headerlink" title="1. mysql根据汉字首字母排序的方法"></a>1. mysql根据汉字首字母排序的方法</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- utf8_general_ci编码</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_school <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token keyword">convert</span><span class="token punctuation">(</span>name <span class="token keyword">using</span> gbk<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-删除表数据的时候，如果表使用了别名"><a href="#2-删除表数据的时候，如果表使用了别名" class="headerlink" title="2. 删除表数据的时候，如果表使用了别名"></a>2. 删除表数据的时候，如果表使用了别名</h2><p>应该这样写：<code>DELETE a FROM table a;</code></p><h2 id="3-不使用缓存执行某个查询sql"><a href="#3-不使用缓存执行某个查询sql" class="headerlink" title="3. 不使用缓存执行某个查询sql"></a>3. 不使用缓存执行某个查询sql</h2><p><code>SELECT SQL_NO_CACHE xx, xx from tb;</code></p><h2 id="4-MySql中Blob与Text的区别"><a href="#4-MySql中Blob与Text的区别" class="headerlink" title="4. MySql中Blob与Text的区别"></a>4. MySql中Blob与Text的区别</h2><p>BLOB列被视为二进制字符串，TEXT列被视为非二进制字符串。</p><h2 id="5-MyISAM和InnoDB的区别"><a href="#5-MyISAM和InnoDB的区别" class="headerlink" title="5. MyISAM和InnoDB的区别"></a>5. MyISAM和InnoDB的区别</h2><p>Innodb 支持事务处理与外键和行级锁；<br>MyISAM类型的表强调的是性能，其执行速度比InnoDB类型更快。</p><h2 id="6-数据库恢复"><a href="#6-数据库恢复" class="headerlink" title="6. 数据库恢复"></a>6. 数据库恢复</h2><p>是指通过技术手段将保存在数据库中丢失的电子数据进行抢救和恢复的技术。</p><h2 id="7-mysql删除自定义函数："><a href="#7-mysql删除自定义函数：" class="headerlink" title="7. mysql删除自定义函数："></a>7. mysql删除自定义函数：</h2><p><code>DROP FUNCTION IF EXISTS `函数名`;</code></p><h2 id="8-插入数据："><a href="#8-插入数据：" class="headerlink" title="8. 插入数据："></a>8. 插入数据：</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> tb <span class="token punctuation">(</span>field1<span class="token punctuation">,</span>field2<span class="token punctuation">,</span>field3……<span class="token punctuation">)</span> <span class="token keyword">value</span> <span class="token punctuation">(</span>val1<span class="token punctuation">,</span>val2<span class="token punctuation">,</span>val3……<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> tb <span class="token punctuation">(</span>field1<span class="token punctuation">,</span>field2<span class="token punctuation">,</span>field3……<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span>val1<span class="token punctuation">,</span>val2<span class="token punctuation">,</span>val3……<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> tb <span class="token keyword">set</span> field1<span class="token operator">=</span>val1<span class="token punctuation">,</span>field2<span class="token operator">=</span>val2<span class="token punctuation">,</span>field3<span class="token operator">=</span>val3<span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> tb <span class="token punctuation">(</span>field1<span class="token punctuation">,</span>field2<span class="token punctuation">,</span>field3……<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span>val11<span class="token punctuation">,</span>val12<span class="token punctuation">,</span>val13……<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>val21<span class="token punctuation">,</span>val22<span class="token punctuation">,</span>val23……<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>val31<span class="token punctuation">,</span>val32<span class="token punctuation">,</span>val33……<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">ignore</span> <span class="token keyword">into</span> tb <span class="token punctuation">(</span>field1<span class="token punctuation">,</span>field2<span class="token punctuation">,</span>field3……<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span>val1<span class="token punctuation">,</span>val2<span class="token punctuation">,</span>val3……<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//使用ignore关键字忽略错误</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="9-查询数据库中每个表的记录数："><a href="#9-查询数据库中每个表的记录数：" class="headerlink" title="9. 查询数据库中每个表的记录数："></a>9. 查询数据库中每个表的记录数：</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> information_schema<span class="token punctuation">;</span><span class="token keyword">select</span> table_name<span class="token punctuation">,</span>table_rows <span class="token keyword">from</span> <span class="token keyword">tables</span> <span class="token keyword">where</span> TABLE_SCHEMA <span class="token operator">=</span> <span class="token string">'dataBase'</span> <span class="token keyword">order</span> <span class="token keyword">by</span> table_rows <span class="token keyword">desc</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="10-mysql查询主键字段名："><a href="#10-mysql查询主键字段名：" class="headerlink" title="10. mysql查询主键字段名："></a>10. mysql查询主键字段名：</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> column_name <span class="token keyword">FROM</span> INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>KEY_COLUMN_USAGE<span class="token punctuation">`</span></span> <span class="token keyword">WHERE</span> table_name<span class="token operator">=</span><span class="token string">'表名'</span> <span class="token operator">AND</span> constraint_name<span class="token operator">=</span><span class="token string">'PRIMARY'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="11-mysql查询所有字段名："><a href="#11-mysql查询所有字段名：" class="headerlink" title="11. mysql查询所有字段名："></a>11. mysql查询所有字段名：</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> column_name <span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">WHERE</span> table_name<span class="token operator">=</span><span class="token string">'表名'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="12、null的问题："><a href="#12、null的问题：" class="headerlink" title="12、null的问题："></a>12、null的问题：</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> t_classroom <span class="token keyword">set</span> building_name<span class="token operator">=</span><span class="token boolean">null</span> <span class="token keyword">where</span> build_id <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="13、获取指定字段的默认值："><a href="#13、获取指定字段的默认值：" class="headerlink" title="13、获取指定字段的默认值："></a>13、获取指定字段的默认值：</h2><p>DEFAULT(col_name)</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">DEFAULT</span><span class="token punctuation">(</span>sort<span class="token punctuation">)</span> <span class="token keyword">from</span> t_node_school <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="14、mysql重命名表名："><a href="#14、mysql重命名表名：" class="headerlink" title="14、mysql重命名表名："></a>14、mysql重命名表名：</h2><p><code>alter table tb1 rename to tb2;</code><br>或者<br><code>rename tb1 to tb2;</code></p><h2 id="15、null字段排序问题："><a href="#15、null字段排序问题：" class="headerlink" title="15、null字段排序问题："></a>15、null字段排序问题：</h2><p>设排序字段为sort，使用order by sort desc实现降序时，sort为null的数据会排在最后面；<br>但是使用order by sort升序时，sort为null的数据会排在最前面，如果想将sort为null的数据排在后面，就需要加is null。<br>如：<code>select * from t_grade order by sort is null, sort, create_time desc;</code></p><h2 id="16、主键设置规则"><a href="#16、主键设置规则" class="headerlink" title="16、主键设置规则"></a>16、主键设置规则</h2><p> 主键的值不可更新，未来可能会变更的字段不能设置为主键；<br> 主键的值不可为空，且不能重复；</p><h2 id="17、查看某个表的所有列："><a href="#17、查看某个表的所有列：" class="headerlink" title="17、查看某个表的所有列："></a>17、查看某个表的所有列：</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">show</span> <span class="token keyword">columns</span> <span class="token keyword">from</span> tableName<span class="token punctuation">;</span>  或者  <span class="token keyword">describe</span> tableName<span class="token punctuation">;</span> <span class="token comment">//可以用来生成数据字典</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="18、下划线”-”通配符-匹配一个字符"><a href="#18、下划线”-”通配符-匹配一个字符" class="headerlink" title="18、下划线”_”通配符 匹配一个字符"></a>18、下划线”_”通配符 匹配一个字符</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> field1<span class="token punctuation">,</span>field2 <span class="token keyword">from</span> tableName <span class="token keyword">where</span> field3 <span class="token operator">like</span> <span class="token string">"_xx"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="19、日期转星期"><a href="#19、日期转星期" class="headerlink" title="19、日期转星期"></a>19、日期转星期</h2> <pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> weekday<span class="token punctuation">(</span><span class="token string">"2021-11-10"</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span> week<span class="token punctuation">;</span>      <span class="token comment">-- 2021年11月10日是星期三</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS笔记</title>
      <link href="/archives/85.html"/>
      <url>/archives/85.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>如果希望css样式不被覆盖，可以在后面加上!important，如：<code>.cntck{ margin-right: 5px!important;}</code></p></li><li><p>如果css希望两个标签对齐，可以用position来处理，如：<code>.cntck{position: relative; bottom: -2px;}</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> CSS </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jquery笔记</title>
      <link href="/archives/22026.html"/>
      <url>/archives/22026.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>jquery获取json的长度：</p><p> 1.1 一维：<code>var JsonTemp = {'id':5,'name':'lilei'};  length = JsonTemp.length;</code></p><p> 1.2 二维：<code>var JsonTemp = {["name":"张三","age":18],["name":"李四","age":19]};  length = Object.keys(JsonTemp).length;</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Jquery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 前端 </tag>
            
            <tag> Jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/archives/48230.html"/>
      <url>/archives/48230.html</url>
      
        <content type="html"><![CDATA[<p>** 编程多年，一直对Linux操作不熟练，主要原因是命令不熟悉，为方便记忆，现罗列一些常用的命令：**</p><ol><li>创建文件夹： <code> mkdir dir</code></li><li>删除文件夹(-r向下递归，-f强制删除)： <code> rm -rf dir</code></li><li>创建文件：<code> touch a.txt</code></li><li>删除文件：<code> rm -f /var/log/a.txt</code></li><li>追加内容到文件：<code> echo sssss &gt;&gt; a.txt</code></li><li>插入内容：vi text.txt =》按i =》插入内容 =》按Esc =》:wq</li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书单心愿墙</title>
      <link href="/archives/64955.html"/>
      <url>/archives/64955.html</url>
      
        <content type="html"><![CDATA[<h3 id="罗列一些自己后续要读的书籍或者文章："><a href="#罗列一些自己后续要读的书籍或者文章：" class="headerlink" title="罗列一些自己后续要读的书籍或者文章："></a>罗列一些自己后续要读的书籍或者文章：</h3><ul><li>《黑客与画家》</li><li>《UNIX编程艺术》</li><li>《异类》</li><li>《羊皮卷》——《选择的力量》</li><li>《优秀到不能被忽视》</li><li>《无言的宇宙》</li><li>《数学女孩》</li></ul>]]></content>
      
      
      <categories>
          
          <category> 书籍 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书籍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git忽略文件</title>
      <link href="/archives/21943.html"/>
      <url>/archives/21943.html</url>
      
        <content type="html"><![CDATA[<p>软件项目使用git提交远程仓库时，如果需要忽略某些文件(如缓存文件、框架核心文件)的变更，可以在项目的根目录下创建.gitignore文件，并罗列需忽略的文件或者文件夹。</p><p>如下为PHP Yii2下的.gitignore文件内容：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">.idea/.project.settings/vendorassets//runtime/Runtime.idea/workspace.xml/upload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但有时候忽略文件不起作用，其原因是：git设置本地忽略时，必须保证远程仓库分支上没有这个要忽略的文件；否则本地的ignore将不起作用。<br>解决方式：删除要忽略的文件并提交远程仓库，ignore该文件。</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 文件忽略 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP实现AES加解密</title>
      <link href="/archives/30302.html"/>
      <url>/archives/30302.html</url>
      
        <content type="html"><![CDATA[<p>系统中的账号信息在进行存储的时候，需要做相应的加密处理；比如用户密码一般是以密文形式存储，而且是不可逆的，常用的就是md5加密；而对于某些账户信息(如：手机号码、银行卡号等)就需要进行可逆加密(如：AES)保存，这样既可以保证数据的安全性，又不影响正常的业务处理。</p><p>下面介绍一下以PHP实现AES加密解密：</p><p>1、AES加密解密类</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">libs</span><span class="token punctuation">;</span><span class="token comment">/*** 利用mcrypt做AES加密解密* 支持密钥：64bit（字节长度8）* 支持算法：DES* 支持模式：ECB* 填充方式：PKCS5*/</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Aes</span><span class="token punctuation">{</span>    <span class="token keyword">const</span> <span class="token constant">CIPHER</span> <span class="token operator">=</span> <span class="token constant">MCRYPT_DES</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">MODE</span> <span class="token operator">=</span> <span class="token constant">MCRYPT_MODE_ECB</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 加密     * @param string $str需加密的字符串     * @param string $key密钥(8位)     * @return string   密文     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">encode</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$size</span> <span class="token operator">=</span> <span class="token function">mcrypt_get_block_size</span> <span class="token punctuation">(</span> <span class="token constant">MCRYPT_DES</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ecb'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token function">pkcs5_pad</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token variable">$size</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$iv</span> <span class="token operator">=</span> <span class="token function">mcrypt_create_iv</span><span class="token punctuation">(</span><span class="token function">mcrypt_get_iv_size</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">CIPHER</span><span class="token punctuation">,</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">MODE</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">MCRYPT_RAND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mcrypt_encrypt</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">CIPHER</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">MODE</span><span class="token punctuation">,</span> <span class="token variable">$iv</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 解密     * @param string $str   密文     * @param string $key   密钥(8位)     * @return string   明文     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">decode</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$iv</span> <span class="token operator">=</span> <span class="token function">mcrypt_create_iv</span><span class="token punctuation">(</span><span class="token function">mcrypt_get_iv_size</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">CIPHER</span><span class="token punctuation">,</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">MODE</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">MCRYPT_RAND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">mcrypt_decrypt</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">CIPHER</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">MODE</span><span class="token punctuation">,</span> <span class="token variable">$iv</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span>  <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token function">pkcs5_unpad</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * PKCS5填充     * @param $text     * @param $blocksize     * @return string     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">pkcs5_pad</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">,</span> <span class="token variable">$blocksize</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$pad</span> <span class="token operator">=</span> <span class="token variable">$blocksize</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token variable">$blocksize</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$text</span> <span class="token operator">.</span> <span class="token function">str_repeat</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$pad</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$pad</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     *     * @param $text     * @return bool|string     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">pkcs5_unpad</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$pad</span> <span class="token operator">=</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">{</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$pad</span> <span class="token operator">&gt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strspn</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">,</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$pad</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token variable">$pad</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token variable">$pad</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">*</span> <span class="token variable">$pad</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、调用</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\</span>modules<span class="token punctuation">\</span>demo<span class="token punctuation">\</span>controllers</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">app<span class="token punctuation">\</span>common<span class="token punctuation">\</span>components<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">libs<span class="token punctuation">\</span>Aes</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">TestController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">actionTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'WGiSP3UQ'</span><span class="token punctuation">;</span>        <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'18958019299'</span><span class="token punctuation">;</span>        <span class="token variable">$enStr</span> <span class="token operator">=</span> <span class="token class-name static-context">Aes</span><span class="token operator">::</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$deStr</span> <span class="token operator">=</span> <span class="token class-name static-context">Aes</span><span class="token operator">::</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token variable">$enStr</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$enStr</span><span class="token punctuation">,</span><span class="token variable">$deStr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3、访问<a href="http://127.0.0.1/web/demo/test/test">http://127.0.0.1/web/demo/test/test</a> ，运行结果如下：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token string double-quoted-string">"18958019299"</span> <span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span> <span class="token string double-quoted-string">"WiBZggO/DRaczJ3wSirvEw=="</span> <span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token string double-quoted-string">"18958019299"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> AES </tag>
            
            <tag> 加解密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JQuery面向对象写法</title>
      <link href="/archives/64020.html"/>
      <url>/archives/64020.html</url>
      
        <content type="html"><![CDATA[<p>书写Jquery代码时，普通的面向过程的写法可以实现功能，但不利于后期维护。现介绍面向对象的写法。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-event</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>列表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-event</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">data-name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>大班<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>搜索<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-event</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>添加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-event</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>update<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>修改<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-event</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>del<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token keyword">var</span> clickAct <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">btn</span><span class="token operator">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function-variable function">init</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>btn<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> func <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'data-event'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>that<span class="token punctuation">[</span>func<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'data-name'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">list</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">param</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">search</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">param</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">param</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'3'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">update</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">param</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'4'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">del</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">param</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>clickAct<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JQuery </tag>
            
            <tag> JavaScript </tag>
            
            <tag> 面向对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL函数</title>
      <link href="/archives/64020.html"/>
      <url>/archives/64020.html</url>
      
        <content type="html"><![CDATA[<p>记录几个常用的MySQL函数：</p><h2 id="1、LAST-INSERT-ID-expr"><a href="#1、LAST-INSERT-ID-expr" class="headerlink" title="1、LAST_INSERT_ID([expr])"></a>1、LAST_INSERT_ID([expr])</h2><p>自动返回最后一个INSERT或 UPDATE 问询为 AUTO_INCREMENT列设置的第一个发生的值。<br>如果一次性insert多条数据，只返回第一个数据的主键。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql<span class="token operator">&gt;</span> SELECT * FROM t<span class="token punctuation">;</span>+----+------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> name <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> Bob  <span class="token operator">|</span>+----+------+mysql<span class="token operator">&gt;</span> INSERT INTO t VALUES  <span class="token punctuation">(</span>NULL, <span class="token string">'Mary'</span><span class="token punctuation">)</span>, <span class="token punctuation">(</span>NULL, <span class="token string">'Jane'</span><span class="token punctuation">)</span>, <span class="token punctuation">(</span>NULL, <span class="token string">'Lisa'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mysql<span class="token operator">&gt;</span> SELECT * FROM t<span class="token punctuation">;</span>+----+------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> name <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> Bob  <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> Mary <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> Jane <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> Lisa <span class="token operator">|</span>+----+------+mysql<span class="token operator">&gt;</span> SELECT LAST_INSERT_ID<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>-<span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：假如你使用 INSERT IGNORE而记录被忽略，则AUTO_INCREMENT 计数器不会增量，而 LAST_INSERT_ID() 返回0,这反映出没有插入任何记录。</p><p>若给出作为到LAST_INSERT_ID()的参数expr ，则参数的值被函数返回，并作为被LAST_INSERT_ID()返回的下一个值而被记忆。这可用于模拟序列：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql<span class="token operator">&gt;</span> CREATE TABLE sequence <span class="token punctuation">(</span>id INT NOT NULL<span class="token punctuation">)</span><span class="token punctuation">;</span>mysql<span class="token operator">&gt;</span> INSERT INTO sequence VALUES <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mysql<span class="token operator">&gt;</span> UPDATE sequence SET <span class="token assign-left variable">id</span><span class="token operator">=</span>LAST_INSERT_ID<span class="token punctuation">(</span>id+1<span class="token punctuation">)</span><span class="token punctuation">;</span>mysql<span class="token operator">&gt;</span> SELECT LAST_INSERT_ID<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     -<span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018-03-29杂谈</title>
      <link href="/archives/971629fc.html"/>
      <url>/archives/971629fc.html</url>
      
        <content type="html"><![CDATA[<p>哈哈，木仓车神附体，科目一96！</p><p><img src="/images/happy.jpg" alt="I'm very happy."></p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用工具推荐</title>
      <link href="/archives/7050c2d4.html"/>
      <url>/archives/7050c2d4.html</url>
      
        <content type="html"><![CDATA[<h3 id="1、windows文件搜索工具"><a href="#1、windows文件搜索工具" class="headerlink" title="1、windows文件搜索工具"></a>1、windows文件搜索工具</h3><p>给大家推荐一款windows下的文件搜索工具——Everything，下载地址：<a href="http://www.voidtools.com/">http://www.voidtools.com/</a></p><h3 id="2、文档搜索工具"><a href="#2、文档搜索工具" class="headerlink" title="2、文档搜索工具"></a>2、文档搜索工具</h3><p>安利一个文档搜索工具——鸠摩搜索，各种格式的电子书、文档都可以下载，比如PDF、TXT、MOBI、DOC等，地址：<a href="https://www.jiumodiary.com/">鸠摩搜索</a></p><h3 id="3、API接口文档管理工具——小幺鸡"><a href="#3、API接口文档管理工具——小幺鸡" class="headerlink" title="3、API接口文档管理工具——小幺鸡"></a>3、API接口文档管理工具——<a href="http://www.xiaoyaoji.cn/">小幺鸡</a></h3><h3 id="4、Git项目搜索工具——BitHubLab"><a href="#4、Git项目搜索工具——BitHubLab" class="headerlink" title="4、Git项目搜索工具——BitHubLab"></a>4、Git项目搜索工具——BitHubLab</h3><p><a href="https://bithublab.org/">BitHubLab</a>，可以搜索所有Git平台上的公开项目，包括GitHub、GitLab和BitBucket等的项目。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
